name: Deploy Rivenbot API service

on:
  workflow_dispatch:
    inputs:
      service-version:
        description: 'Version of the service to deploy'
        required: true
        default: 'latest'
  push:
    tags:
    - "v*.*.*"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.determine_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0
      - name: Determine version
        id: determine_version
        run: |
          if [ "${GITHUB_EVENT_NAME}" == "create" ] && [ -n "${GITHUB_REF}" ]; then
            # event was triggered by tag, extract version from key
            VERSION=${GITHUB#refs/tags/v}
          else
            VERSION="${{ github.event.inputs['service-version'] }}"
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/rivenbot-api-service:${{ env.VERSION }}
            ${{ secrets.DOCKER_USERNAME }}/rivenbot-api-service:latest
  deploy:
    needs: build-and-push
    uses: Riven-of-a-Thousand-Servers/rivenbot-deployments/.github/workflows/stack-deploy.yml@main
    with:
      api-service-version: ${{ needs.build-and-push.outputs.version }}
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      TOKEN: ${{ secrets.DEPLOYMENT_PAT }}

